/**
 * Реализуйте следующие классы:
 * Контейнер, который содержит значения факториала от 1! до 10!.
 *
 * Интерфейс класса должен включать в себя как минимум:
 *    - Конструктор по умолчанию
 *    - Функцию получения итератора указывающего на первый элемент
 *    контейнера - begin()
 *    - Функцию получения итератора указывающего на элемент, следующий за
 *    последним - end()
 *
 * Доступ к элементам этого контейнера возможен только с помощью итераторов
 * возвращаемых функциями begin() и end().
 *
 * Контейнер не должен содержать в памяти свои элементы, они должны вычисляться
 * при обращении к ним через итератор
 *
 * Класс итератора для перечисления элементов этого контейнера, объекты этого
 * класса возвращаются функциями begin() и end(). Итератор должен быть
 * двунаправленным. Итератор должен быть совместимым с STL
 * (проверить это можно используя алгоритм copy для копирования содержимого
 * разработанного контейнера в vector<int>)
 */

////////////////////////////////
// Фомин С. (группа 23531/21) //
////////////////////////////////

#include <iostream>

#include "Factorial.h"

#define SPACE " "

using namespace std;

int main() {
    Factorial factorial;
    
    cout << "Проход по контейнеру вперед:" << endl;

    // TODO: Начинает с 0!, а по заданию надо с 1!
    for (auto it = factorial.begin(); it != factorial.end(); ++it) {
        cout << *it << SPACE;
    }
    
    cout << endl;
    
    factorial = Factorial();
    
    cout << "Проход по контейнеру назад:" << endl;
    
    for (auto it = --factorial.end(); it != factorial.begin(); --it) {
        cout << *it << SPACE;
    }
    
    cout << endl;
    
    vector<int> vector(factorial.getSize());
    copy(factorial.begin(), factorial.end(), vector.begin());

    cout << "Проход по вектору:" << endl;
    
    for_each(vector.begin(), vector.end(), [] (int number) {
        cout << number << SPACE;
    });
    
    cout << endl;
}
